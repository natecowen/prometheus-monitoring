apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-configmap
  namespace: dev-things
  labels:
    name: prometheus-configmap
data:
  prometheus.rules: |-
    groups:
      - name: example
        rules:
        - alert: InstanceDown
          expr: up == 0 
          for: 1m
          labels: 
            severity: page
          annotations: 
            summary: "Instance {{ $labels.instance}} down"
            description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than a minute."
        - alert: EndpointDown
          expr: probe_success == 0
          for: 1m
          labels: 
            severity: critical
          annotations: 
            summary: "Endpoint {{ $labels.instance }} down"

  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
      scrape_timeout: 20s

    rule_files:
      - '/etc/prometheus/prometheus.rules'

    scrape_configs:
      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
        - action: replace
          source_labels: [id]
          regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
          target_label: rkt_container_name
          replacement: '${2}-${1}'
        - action: replace
          source_labels: [id]
          regex: '^/system\.slice/(.+)\.service$'
          target_label: systemd_service_name
          replacement: '${1}'  

      
      - job_name: 'CoreDev-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
          # Grab only CoreDev Namespaces
          - action: keep
            source_labels: [__meta_kubernetes_namespace]
            regex: CoreDev-production|CoreDev-staging|CoreDev-development
          # Update the __meta label to ensure it's kept
          - action: labelmap 
            regex: __meta_kubernetes_namespace
            replacement: kubernetes_namespace
            # Add Microservice Name
          - action: labelmap
            regex: __meta_kubernetes_pod_label_app
            replacement: microservice

      - job_name: 'dev-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
          # Grab only CoreDev Namespaces
          - action: keep
            source_labels: [__meta_kubernetes_namespace]
            regex: dev-things
          # Update the __meta label to ensure it's kept
          - action: labelmap 
            regex: __meta_kubernetes_namespace
            replacement: kubernetes_namespace
            # Add Microservice Name
          - action: labelmap
            regex: __meta_kubernetes_pod_label_app
            replacement: app_name

    alerting:
      alertmanagers:
      - static_configs:
        - targets: ['10.192.68.76:30002']